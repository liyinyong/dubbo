2017-02-26 17:59:09.336 [main] DEBUG org.apache.ibatis.logging.LogFactory.setImplementation(128) - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2017-02-26 17:59:09.418 [main] DEBUG o.m.spring.SqlSessionFactoryBean.buildSqlSessionFactory(362) - Property 'configLocation' not specified, using default MyBatis Configuration
2017-02-26 17:59:09.588 [main] DEBUG o.m.spring.SqlSessionFactoryBean.buildSqlSessionFactory(472) - Parsed mapper file: 'file [D:\bo\soa\soa-parent\soa-trade\soa-trade-core\target\classes\mybatis\com\soa\trade\TradeMapper.xml]'
2017-02-26 17:59:10.002 [main] INFO  c.a.d.common.logger.LoggerFactory.info(42) - using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
2017-02-26 17:59:10.064 [main] DEBUG c.a.d.c.extension.ExtensionLoader.debug(30) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.0, current host: 127.0.0.1
2017-02-26 17:59:10.091 [main] DEBUG c.a.d.c.extension.ExtensionLoader.debug(30) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.0, current host: 127.0.0.1
2017-02-26 17:59:10.123 [main] INFO  c.a.d.r.zookeeper.ZookeeperRegistry.info(42) -  [DUBBO] Load registry store file C:\Users\jm\.dubbo\dubbo-registry-192.168.48.117.cache, data: {com.soa.product.facade.ProductFacade=empty://192.168.100.39:20880/com.soa.product.facade.ProductFacade?anyhost=true&application=soa-product&category=configurators&check=false&dubbo=2.0.0&generic=false&interface=com.soa.product.facade.ProductFacade&logger=slf4j&methods=findAllProduct&pid=6152&side=provider&timestamp=1477756159975, com.alibaba.dubbo.demo.DemoService=dubbo://192.168.100.39:20880/com.alibaba.dubbo.demo.DemoService?anyhost=true&application=demo-provider&dubbo=2.0.0&generic=false&interface=com.alibaba.dubbo.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=william&pid=5212&side=provider&timestamp=1487168827493 empty://192.168.100.39/com.alibaba.dubbo.demo.DemoService?application=demo-consumer&category=configurators&dubbo=2.0.0&interface=com.alibaba.dubbo.demo.DemoService&methods=sayHello&pid=7312&side=consumer&timestamp=1487168843725 empty://192.168.100.39/com.alibaba.dubbo.demo.DemoService?application=demo-consumer&category=routers&dubbo=2.0.0&interface=com.alibaba.dubbo.demo.DemoService&methods=sayHello&pid=7312&side=consumer&timestamp=1487168843725, com.soa.user.facade.UserFacade=empty://192.168.100.39:20881/com.soa.user.facade.UserFacade?anyhost=true&application=soa-user&category=configurators&check=false&dubbo=2.0.0&generic=false&interface=com.soa.user.facade.UserFacade&logger=slf4j&methods=login&pid=12456&side=provider&timestamp=1477755994490, com.soa.order.facade.OrderFacade=dubbo://192.168.100.39:20882/com.soa.order.facade.OrderFacade?anyhost=true&application=soa-order&dubbo=2.0.0&generic=false&interface=com.soa.order.facade.OrderFacade&logger=slf4j&methods=findOrderByUserId,updateOrderByTrade,createOrder&pid=11044&side=provider&timestamp=1477756221111 empty://192.168.100.39/com.soa.order.facade.OrderFacade?application=soa-trade&category=configurators&dubbo=2.0.0&interface=com.soa.order.facade.OrderFacade&logger=slf4j&methods=findOrderByUserId,updateOrderByTrade,createOrder&pid=10820&side=consumer&timestamp=1477756451236 empty://192.168.100.39/com.soa.order.facade.OrderFacade?application=soa-trade&category=routers&dubbo=2.0.0&interface=com.soa.order.facade.OrderFacade&logger=slf4j&methods=findOrderByUserId,updateOrderByTrade,createOrder&pid=10820&side=consumer&timestamp=1477756451236, com.alibaba.dubbo.monitor.MonitorService=dubbo://192.168.48.37:7070/com.alibaba.dubbo.monitor.MonitorService?anyhost=true&application=simple-monitor&delay=-1&dubbo=2.5.4-SNAPSHOT&generic=false&interface=com.alibaba.dubbo.monitor.MonitorService&methods=lookup,collect&pid=32341&revision=2.5.4-SNAPSHOT&side=provider&timestamp=1487161607944 empty://192.168.100.39/com.alibaba.dubbo.monitor.MonitorService?category=configurators&dubbo=2.0.0&interface=com.alibaba.dubbo.monitor.MonitorService&pid=7312&timestamp=1487168843792 empty://192.168.100.39/com.alibaba.dubbo.monitor.MonitorService?category=routers&dubbo=2.0.0&interface=com.alibaba.dubbo.monitor.MonitorService&pid=7312&timestamp=1487168843792, com.soa.trade.facade.TradeFacade=empty://192.168.100.39:20883/com.soa.trade.facade.TradeFacade?anyhost=true&application=soa-trade&category=configurators&check=false&dubbo=2.0.0&generic=false&interface=com.soa.trade.facade.TradeFacade&logger=slf4j&methods=createTrade&pid=10820&side=provider&timestamp=1477756457468}, dubbo version: 2.0.0, current host: 127.0.0.1
2017-02-26 17:59:19.316 [main] DEBUG c.a.d.c.extension.ExtensionLoader.debug(30) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.0, current host: 127.0.0.1
2017-02-26 17:59:19.338 [main] DEBUG c.a.d.c.extension.ExtensionLoader.debug(30) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.0, current host: 127.0.0.1
2017-02-26 17:59:19.356 [main] INFO  c.a.d.r.zookeeper.ZookeeperRegistry.info(42) -  [DUBBO] Register: consumer://192.168.100.54/com.soa.order.facade.OrderFacade?application=soa-trade&category=consumers&check=false&dubbo=2.0.0&interface=com.soa.order.facade.OrderFacade&logger=slf4j&methods=findOrderByUserId,updateOrderByTrade,createOrder&pid=17236&side=consumer&timestamp=1488103150003, dubbo version: 2.0.0, current host: 192.168.100.54
2017-02-26 17:59:19.456 [main] INFO  c.a.d.r.zookeeper.ZookeeperRegistry.info(42) -  [DUBBO] Subscribe: consumer://192.168.100.54/com.soa.order.facade.OrderFacade?application=soa-trade&category=providers,configurators,routers&dubbo=2.0.0&interface=com.soa.order.facade.OrderFacade&logger=slf4j&methods=findOrderByUserId,updateOrderByTrade,createOrder&pid=17236&side=consumer&timestamp=1488103150003, dubbo version: 2.0.0, current host: 192.168.100.54
2017-02-26 17:59:19.690 [main] INFO  c.a.d.r.zookeeper.ZookeeperRegistry.info(42) -  [DUBBO] Notify urls for subscribe url consumer://192.168.100.54/com.soa.order.facade.OrderFacade?application=soa-trade&category=providers,configurators,routers&dubbo=2.0.0&interface=com.soa.order.facade.OrderFacade&logger=slf4j&methods=findOrderByUserId,updateOrderByTrade,createOrder&pid=17236&side=consumer&timestamp=1488103150003, urls: [empty://192.168.100.54/com.soa.order.facade.OrderFacade?application=soa-trade&category=providers&dubbo=2.0.0&interface=com.soa.order.facade.OrderFacade&logger=slf4j&methods=findOrderByUserId,updateOrderByTrade,createOrder&pid=17236&side=consumer&timestamp=1488103150003, empty://192.168.100.54/com.soa.order.facade.OrderFacade?application=soa-trade&category=configurators&dubbo=2.0.0&interface=com.soa.order.facade.OrderFacade&logger=slf4j&methods=findOrderByUserId,updateOrderByTrade,createOrder&pid=17236&side=consumer&timestamp=1488103150003, empty://192.168.100.54/com.soa.order.facade.OrderFacade?application=soa-trade&category=routers&dubbo=2.0.0&interface=com.soa.order.facade.OrderFacade&logger=slf4j&methods=findOrderByUserId,updateOrderByTrade,createOrder&pid=17236&side=consumer&timestamp=1488103150003], dubbo version: 2.0.0, current host: 192.168.100.54
2017-02-26 17:59:19.712 [main] ERROR com.alibaba.dubbo.container.Main.error(74) -  [DUBBO] Error creating bean with name 'tradeFacadeImpl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'orderFacade': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.soa.order.facade.OrderFacade. No provider available for the service com.soa.order.facade.OrderFacade from the url zookeeper://192.168.48.117:2181/com.alibaba.dubbo.registry.RegistryService?application=soa-trade&dubbo=2.0.0&interface=com.soa.order.facade.OrderFacade&logger=slf4j&methods=findOrderByUserId,updateOrderByTrade,createOrder&pid=17236&side=consumer&timestamp=1488103150003 to the consumer 192.168.100.54 use dubbo version 2.0.0, dubbo version: 2.0.0, current host: 192.168.100.54
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tradeFacadeImpl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'orderFacade': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.soa.order.facade.OrderFacade. No provider available for the service com.soa.order.facade.OrderFacade from the url zookeeper://192.168.48.117:2181/com.alibaba.dubbo.registry.RegistryService?application=soa-trade&dubbo=2.0.0&interface=com.soa.order.facade.OrderFacade&logger=slf4j&methods=findOrderByUserId,updateOrderByTrade,createOrder&pid=17236&side=consumer&timestamp=1488103150003 to the consumer 192.168.100.54 use dubbo version 2.0.0
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:311) ~[spring-context-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214) ~[spring-beans-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543) ~[spring-beans-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482) ~[spring-beans-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305) ~[spring-beans-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301) ~[spring-beans-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196) ~[spring-beans-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772) ~[spring-beans-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:834) ~[spring-context-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537) ~[spring-context-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139) ~[spring-context-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93) ~[spring-context-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at com.alibaba.dubbo.container.spring.SpringContainer.start(SpringContainer.java:50) ~[classes/:na]
	at com.alibaba.dubbo.container.Main.main(Main.java:80) ~[classes/:na]
	at com.soa.trade.TradeMain.main(TradeMain.java:6) [test-classes/:na]
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'orderFacade': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.soa.order.facade.OrderFacade. No provider available for the service com.soa.order.facade.OrderFacade from the url zookeeper://192.168.48.117:2181/com.alibaba.dubbo.registry.RegistryService?application=soa-trade&dubbo=2.0.0&interface=com.soa.order.facade.OrderFacade&logger=slf4j&methods=findOrderByUserId,updateOrderByTrade,createOrder&pid=17236&side=consumer&timestamp=1488103150003 to the consumer 192.168.100.54 use dubbo version 2.0.0
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175) ~[spring-beans-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103) ~[spring-beans-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1574) ~[spring-beans-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:316) ~[spring-beans-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201) ~[spring-beans-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:512) ~[spring-context-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:486) ~[spring-context-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:615) ~[spring-context-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:169) ~[spring-beans-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) ~[spring-beans-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:308) ~[spring-context-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	... 15 common frames omitted
Caused by: java.lang.IllegalStateException: Failed to check the status of the service com.soa.order.facade.OrderFacade. No provider available for the service com.soa.order.facade.OrderFacade from the url zookeeper://192.168.48.117:2181/com.alibaba.dubbo.registry.RegistryService?application=soa-trade&dubbo=2.0.0&interface=com.soa.order.facade.OrderFacade&logger=slf4j&methods=findOrderByUserId,updateOrderByTrade,createOrder&pid=17236&side=consumer&timestamp=1488103150003 to the consumer 192.168.100.54 use dubbo version 2.0.0
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:420) ~[classes/:na]
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:300) ~[classes/:na]
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:138) ~[classes/:na]
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:65) ~[classes/:na]
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168) ~[spring-beans-4.2.0.RELEASE.jar:4.2.0.RELEASE]
	... 25 common frames omitted
2017-02-26 17:59:19.725 [DubboShutdownHook] INFO  c.a.dubbo.config.AbstractConfig.info(42) -  [DUBBO] Run shutdown hook now., dubbo version: 2.0.0, current host: 192.168.100.54
2017-02-26 17:59:19.725 [Finalizer] WARN  c.a.dubbo.config.AbstractConfig.warn(54) -  [DUBBO] ReferenceConfig(null) is not DESTROYED when FINALIZE, dubbo version: 2.0.0, current host: 192.168.100.54
2017-02-26 17:59:19.726 [DubboShutdownHook] INFO  c.a.d.r.s.AbstractRegistryFactory.info(42) -  [DUBBO] Close all registries [zookeeper://192.168.48.117:2181/com.alibaba.dubbo.registry.RegistryService?application=soa-trade&backup=192.168.48.120:2181,192.168.48.123:2181&dubbo=2.0.0&interface=com.alibaba.dubbo.registry.RegistryService&logger=slf4j&pid=17236&timestamp=1488103150048], dubbo version: 2.0.0, current host: 192.168.100.54
2017-02-26 17:59:19.727 [DubboShutdownHook] INFO  c.a.d.r.zookeeper.ZookeeperRegistry.info(42) -  [DUBBO] Destroy registry:zookeeper://192.168.48.117:2181/com.alibaba.dubbo.registry.RegistryService?application=soa-trade&backup=192.168.48.120:2181,192.168.48.123:2181&dubbo=2.0.0&interface=com.alibaba.dubbo.registry.RegistryService&logger=slf4j&pid=17236&timestamp=1488103150048, dubbo version: 2.0.0, current host: 192.168.100.54
2017-02-26 17:59:19.727 [DubboShutdownHook] INFO  c.a.d.r.zookeeper.ZookeeperRegistry.info(42) -  [DUBBO] Unregister: consumer://192.168.100.54/com.soa.order.facade.OrderFacade?application=soa-trade&category=consumers&check=false&dubbo=2.0.0&interface=com.soa.order.facade.OrderFacade&logger=slf4j&methods=findOrderByUserId,updateOrderByTrade,createOrder&pid=17236&side=consumer&timestamp=1488103150003, dubbo version: 2.0.0, current host: 192.168.100.54
2017-02-26 17:59:19.746 [DubboShutdownHook] INFO  c.a.d.r.zookeeper.ZookeeperRegistry.info(42) -  [DUBBO] Destroy unregister url consumer://192.168.100.54/com.soa.order.facade.OrderFacade?application=soa-trade&category=consumers&check=false&dubbo=2.0.0&interface=com.soa.order.facade.OrderFacade&logger=slf4j&methods=findOrderByUserId,updateOrderByTrade,createOrder&pid=17236&side=consumer&timestamp=1488103150003, dubbo version: 2.0.0, current host: 192.168.100.54
2017-02-26 17:59:19.746 [DubboShutdownHook] INFO  c.a.d.r.zookeeper.ZookeeperRegistry.info(42) -  [DUBBO] Unsubscribe: consumer://192.168.100.54/com.soa.order.facade.OrderFacade?application=soa-trade&category=providers,configurators,routers&dubbo=2.0.0&interface=com.soa.order.facade.OrderFacade&logger=slf4j&methods=findOrderByUserId,updateOrderByTrade,createOrder&pid=17236&side=consumer&timestamp=1488103150003, dubbo version: 2.0.0, current host: 192.168.100.54
2017-02-26 17:59:19.747 [DubboShutdownHook] INFO  c.a.d.r.zookeeper.ZookeeperRegistry.info(42) -  [DUBBO] Destroy unsubscribe url consumer://192.168.100.54/com.soa.order.facade.OrderFacade?application=soa-trade&category=providers,configurators,routers&dubbo=2.0.0&interface=com.soa.order.facade.OrderFacade&logger=slf4j&methods=findOrderByUserId,updateOrderByTrade,createOrder&pid=17236&side=consumer&timestamp=1488103150003, dubbo version: 2.0.0, current host: 192.168.100.54
